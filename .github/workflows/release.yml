name: Release

on:
  push:
    tags:
      - 'v*'

permissions:
  contents: write

jobs:
  release:
    name: Create Release
    runs-on: ubuntu-latest
    
    steps:
    - name: Check out code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: '1.23'

    - name: Run tests
      run: go test -v ./...

    - name: Build examples
      run: |
        mkdir -p release/examples
        for example in examples/*/; do
          if [ -f "$example/main.go" ]; then
            example_name=$(basename "$example")
            echo "Building example: $example_name"
            (cd "$example" && go build -o "../../release/examples/$example_name" .)
          fi
        done

    - name: Generate changelog
      id: changelog
      run: |
        if [ -f CHANGELOG.md ]; then
          # Extract changelog for this version
          awk '/^## \[/{if (found) exit} /^## \['${{ github.ref_name }}'\]/{found=1; next} found' CHANGELOG.md > release_notes.md
        else
          echo "Release ${{ github.ref_name }}" > release_notes.md
          echo "" >> release_notes.md
          echo "See [commits](https://github.com/${{ github.repository }}/commits/${{ github.ref_name }}) for details." >> release_notes.md
        fi

    - name: Create Release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref }}
        release_name: Release ${{ github.ref_name }}
        body_path: release_notes.md
        draft: false
        prerelease: ${{ contains(github.ref_name, '-') }} 