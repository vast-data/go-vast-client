// Code generated by generate-typed-resources. DO NOT EDIT.

package typed

import (
	"context"
	"encoding/json"
	"fmt"
	"reflect"

	vast_client "github.com/vast-data/go-vast-client"
)

// -----------------------------------------------------
// SEARCH PARAMS
// -----------------------------------------------------

// ProtectionPolicySearchParams represents the search parameters for ProtectionPolicy operations
// Generated from GET query parameters for resource: protectionpolicies
type ProtectionPolicySearchParams struct {
	Guid     string `json:"guid,omitempty" yaml:"guid,omitempty" required:"false" doc:"unique identifier"`
	Name     string `json:"name,omitempty" yaml:"name,omitempty" required:"false" doc:"Filter by protection policy name"`
	TenantId int64  `json:"tenant_id,omitempty" yaml:"tenant_id,omitempty" required:"false" doc:""`
}

// -----------------------------------------------------
// REQUEST BODY
// -----------------------------------------------------

// ProtectionPolicyRequestBody represents the request body for ProtectionPolicy operations
// Generated from POST request body for resource: protectionpolicies
type ProtectionPolicyRequestBody struct {
	BigCatalog       bool   `json:"big_catalog,omitempty" yaml:"big_catalog,omitempty" required:"false" doc:"Indicates if Protection Policy will be used for VAST Catalog. There may only be 1 such policy."`
	CloneType        string `json:"clone_type,omitempty" yaml:"clone_type,omitempty" required:"false" doc:"Specify the type of data protection. CLOUD_REPLICATION is S3 backup. LOCAL means local snapshots without replication."`
	Guid             string `json:"guid,omitempty" yaml:"guid,omitempty" required:"false" doc:"Do not specify this parameter."`
	Id               int64  `json:"id,omitempty" yaml:"id,omitempty" required:"false" doc:"Do not specify this parameter."`
	Indestructible   bool   `json:"indestructible,omitempty" yaml:"indestructible,omitempty" required:"false" doc:"Set to true to protect the protection policy from accidental or malicious deletion with the indestructibility feature. If this setting is enabled, authorized unlocking of the cluster's indestructibility mechanism is required to do any of the following: modifying the policy, deleting the policy or disabling this setting."`
	Name             string `json:"name,omitempty" yaml:"name,omitempty" required:"false" doc:""`
	Prefix           string `json:"prefix,omitempty" yaml:"prefix,omitempty" required:"false" doc:"The prefix for names of snapshots created by the policy"`
	RemoteTenantGuid string `json:"remote_tenant_guid,omitempty" yaml:"remote_tenant_guid,omitempty" required:"false" doc:"remote tenant guid"`
	TargetObjectId   int64  `json:"target_object_id,omitempty" yaml:"target_object_id,omitempty" required:"false" doc:"ID of the remote peer. Specify ID of a ReplicationTarget (aka S3 replication peer) if clone_type is CLOUD_REPLICATION. Specify the ID of a NativeReplicationRemoteTarget if clone_type is NATIVE_REPLICATION."`
	TenantId         int64  `json:"tenant_id,omitempty" yaml:"tenant_id,omitempty" required:"false" doc:"Tenant ID"`
}

// -----------------------------------------------------
// MODEL
// -----------------------------------------------------

// ProtectionPolicyModel_FramesItem represents a nested type for model
type ProtectionPolicyModel_FramesItem struct {
	Every      string `json:"every,omitempty" yaml:"every,omitempty" required:"false" doc:""`
	KeepLocal  string `json:"keep-local,omitempty" yaml:"keep-local,omitempty" required:"false" doc:""`
	KeepRemote string `json:"keep-remote,omitempty" yaml:"keep-remote,omitempty" required:"false" doc:""`
	StartAt    string `json:"start-at,omitempty" yaml:"start-at,omitempty" required:"false" doc:""`
}

// ProtectionPolicyModel_RemoteTenant represents a nested type for model
type ProtectionPolicyModel_RemoteTenant struct {
	Guid string `json:"guid,omitempty" yaml:"guid,omitempty" required:"false" doc:"Remote Tenant guid"`
	Name string `json:"name,omitempty" yaml:"name,omitempty" required:"false" doc:"Remote Tenant name"`
}

// ProtectionPolicyModel_Tenant represents a nested type for model
type ProtectionPolicyModel_Tenant struct {
	Id   int64  `json:"id,omitempty" yaml:"id,omitempty" required:"false" doc:"Tenant ID"`
	Name string `json:"name,omitempty" yaml:"name,omitempty" required:"false" doc:"Tenant Name"`
}

// ProtectionPolicyModel represents the model data for ProtectionPolicy operations
// Generated from schema: ProtectionPolicy
type ProtectionPolicyModel struct {
	CloneType                     string                              `json:"clone_type,omitempty" yaml:"clone_type,omitempty" required:"false" doc:"Specify the type of data protection. CLOUD_REPLICATION is S3 backup. LOCAL means local snapshots without replication."`
	Created                       string                              `json:"created,omitempty" yaml:"created,omitempty" required:"false" doc:""`
	Frames                        *[]ProtectionPolicyModel_FramesItem `json:"frames,omitempty" yaml:"frames,omitempty" required:"false" doc:"Defines the schedule for snapshot creation and the local and remote retention policies."`
	Guid                          string                              `json:"guid,omitempty" yaml:"guid,omitempty" required:"false" doc:"unique identifier"`
	Handle                        string                              `json:"handle,omitempty" yaml:"handle,omitempty" required:"false" doc:""`
	Id                            int64                               `json:"id,omitempty" yaml:"id,omitempty" required:"false" doc:""`
	Indestructible                bool                                `json:"indestructible,omitempty" yaml:"indestructible,omitempty" required:"false" doc:"Protected from accidental or malicious deletion by the indestructibility mechanism. Authorized unlocking of the cluster's indestructibility mechanism is required to do any of the following: deleting the protection policy, modifying the protection policy, or disabling this setting."`
	Internal                      bool                                `json:"internal,omitempty" yaml:"internal,omitempty" required:"false" doc:""`
	IsLocal                       bool                                `json:"is_local,omitempty" yaml:"is_local,omitempty" required:"false" doc:""`
	IsOnSchedule                  bool                                `json:"is_on_schedule,omitempty" yaml:"is_on_schedule,omitempty" required:"false" doc:""`
	Name                          string                              `json:"name,omitempty" yaml:"name,omitempty" required:"false" doc:""`
	NativeReplicationRemoteTarget string                              `json:"native_replication_remote_target,omitempty" yaml:"native_replication_remote_target,omitempty" required:"false" doc:""`
	Prefix                        string                              `json:"prefix,omitempty" yaml:"prefix,omitempty" required:"false" doc:"The prefix of the snapshot that will be created"`
	PrettySchedules               *[]string                           `json:"pretty_schedules,omitempty" yaml:"pretty_schedules,omitempty" required:"false" doc:""`
	RemoteTenant                  ProtectionPolicyModel_RemoteTenant  `json:"remote_tenant,omitempty" yaml:"remote_tenant,omitempty" required:"false" doc:""`
	ReplicationTarget             string                              `json:"replication_target,omitempty" yaml:"replication_target,omitempty" required:"false" doc:""`
	ScheduleMiss                  int64                               `json:"schedule_miss,omitempty" yaml:"schedule_miss,omitempty" required:"false" doc:""`
	State                         string                              `json:"state,omitempty" yaml:"state,omitempty" required:"false" doc:"State of Protection Policy"`
	SyncInterval                  int64                               `json:"sync_interval,omitempty" yaml:"sync_interval,omitempty" required:"false" doc:"A sync point is a common restore point for all group members. This value guarantees such a sync point exists in this duration. In other words, this is the maximal sync duration gap between other members."`
	TargetGuid                    string                              `json:"target_guid,omitempty" yaml:"target_guid,omitempty" required:"false" doc:""`
	TargetName                    string                              `json:"target_name,omitempty" yaml:"target_name,omitempty" required:"false" doc:"Target Name"`
	TargetObjectId                int64                               `json:"target_object_id,omitempty" yaml:"target_object_id,omitempty" required:"false" doc:"target object id"`
	Tenant                        ProtectionPolicyModel_Tenant        `json:"tenant,omitempty" yaml:"tenant,omitempty" required:"false" doc:""`
	TenantId                      int64                               `json:"tenant_id,omitempty" yaml:"tenant_id,omitempty" required:"false" doc:""`
	Title                         string                              `json:"title,omitempty" yaml:"title,omitempty" required:"false" doc:""`
	Url                           string                              `json:"url,omitempty" yaml:"url,omitempty" required:"false" doc:""`
}

// -----------------------------------------------------
// RESOURCE METHODS
// -----------------------------------------------------

// ProtectionPolicy represents a typed resource for protectionpolicy operations
type ProtectionPolicy struct {
	Untyped *vast_client.VMSRest
}

// Get retrieves a single protectionpolicy with typed request/response
func (r *ProtectionPolicy) Get(req *ProtectionPolicySearchParams) (*ProtectionPolicyModel, error) {
	params, err := vast_client.NewParamsFromStruct(req)
	if err != nil {
		return nil, err
	}

	record, err := r.Untyped.ProtectionPolicies.Get(params)
	if err != nil {
		return nil, err
	}

	var response ProtectionPolicyModel
	if err := record.Fill(&response); err != nil {
		return nil, err
	}

	return &response, nil
}

// GetWithContext retrieves a single protectionpolicy with typed request/response using provided context
func (r *ProtectionPolicy) GetWithContext(ctx context.Context, req *ProtectionPolicySearchParams) (*ProtectionPolicyModel, error) {
	params, err := vast_client.NewParamsFromStruct(req)
	if err != nil {
		return nil, err
	}

	record, err := r.Untyped.ProtectionPolicies.GetWithContext(ctx, params)
	if err != nil {
		return nil, err
	}

	var response ProtectionPolicyModel
	if err := record.Fill(&response); err != nil {
		return nil, err
	}

	return &response, nil
}

// GetById retrieves a single protectionpolicy by ID
func (r *ProtectionPolicy) GetById(id any) (*ProtectionPolicyModel, error) {
	record, err := r.Untyped.ProtectionPolicies.GetById(id)
	if err != nil {
		return nil, err
	}

	var response ProtectionPolicyModel
	if err := record.Fill(&response); err != nil {
		return nil, err
	}

	return &response, nil
}

// GetByIdWithContext retrieves a single protectionpolicy by ID using provided context
func (r *ProtectionPolicy) GetByIdWithContext(ctx context.Context, id any) (*ProtectionPolicyModel, error) {
	record, err := r.Untyped.ProtectionPolicies.GetByIdWithContext(ctx, id)
	if err != nil {
		return nil, err
	}

	var response ProtectionPolicyModel
	if err := record.Fill(&response); err != nil {
		return nil, err
	}

	return &response, nil
}

// List retrieves multiple protectionpolicys with typed request/response
func (r *ProtectionPolicy) List(req *ProtectionPolicySearchParams) ([]*ProtectionPolicyModel, error) {
	params, err := vast_client.NewParamsFromStruct(req)
	if err != nil {
		return nil, err
	}

	recordSet, err := r.Untyped.ProtectionPolicies.List(params)
	if err != nil {
		return nil, err
	}

	var response []*ProtectionPolicyModel
	if err := recordSet.Fill(&response); err != nil {
		return nil, err
	}

	return response, nil
}

// ListWithContext retrieves multiple protectionpolicys with typed request/response using provided context
func (r *ProtectionPolicy) ListWithContext(ctx context.Context, req *ProtectionPolicySearchParams) ([]*ProtectionPolicyModel, error) {
	params, err := vast_client.NewParamsFromStruct(req)
	if err != nil {
		return nil, err
	}

	recordSet, err := r.Untyped.ProtectionPolicies.ListWithContext(ctx, params)
	if err != nil {
		return nil, err
	}

	var response []*ProtectionPolicyModel
	if err := recordSet.Fill(&response); err != nil {
		return nil, err
	}

	return response, nil
}

// Create creates a new protectionpolicy with typed request/response
func (r *ProtectionPolicy) Create(req *ProtectionPolicyRequestBody) (*ProtectionPolicyModel, error) {
	params, err := vast_client.NewParamsFromStruct(req)
	if err != nil {
		return nil, err
	}

	record, err := r.Untyped.ProtectionPolicies.Create(params)
	if err != nil {
		return nil, err
	}

	var response ProtectionPolicyModel
	if err := record.Fill(&response); err != nil {
		return nil, err
	}

	return &response, nil
}

// CreateWithContext creates a new protectionpolicy with typed request/response using provided context
func (r *ProtectionPolicy) CreateWithContext(ctx context.Context, req *ProtectionPolicyRequestBody) (*ProtectionPolicyModel, error) {
	params, err := vast_client.NewParamsFromStruct(req)
	if err != nil {
		return nil, err
	}

	record, err := r.Untyped.ProtectionPolicies.CreateWithContext(ctx, params)
	if err != nil {
		return nil, err
	}

	var response ProtectionPolicyModel
	if err := record.Fill(&response); err != nil {
		return nil, err
	}

	return &response, nil
}

// Update updates an existing protectionpolicy with typed request/response
func (r *ProtectionPolicy) Update(id any, req *ProtectionPolicyRequestBody) (*ProtectionPolicyModel, error) {
	params, err := vast_client.NewParamsFromStruct(req)
	if err != nil {
		return nil, err
	}

	record, err := r.Untyped.ProtectionPolicies.Update(id, params)
	if err != nil {
		return nil, err
	}

	var response ProtectionPolicyModel
	if err := record.Fill(&response); err != nil {
		return nil, err
	}

	return &response, nil
}

// UpdateWithContext updates an existing protectionpolicy with typed request/response using provided context
func (r *ProtectionPolicy) UpdateWithContext(ctx context.Context, id any, req *ProtectionPolicyRequestBody) (*ProtectionPolicyModel, error) {
	params, err := vast_client.NewParamsFromStruct(req)
	if err != nil {
		return nil, err
	}

	record, err := r.Untyped.ProtectionPolicies.UpdateWithContext(ctx, id, params)
	if err != nil {
		return nil, err
	}

	var response ProtectionPolicyModel
	if err := record.Fill(&response); err != nil {
		return nil, err
	}

	return &response, nil
}

// Delete deletes a protectionpolicy with search parameters
func (r *ProtectionPolicy) Delete(req *ProtectionPolicySearchParams) error {
	params, err := vast_client.NewParamsFromStruct(req)
	if err != nil {
		return err
	}
	_, err = r.Untyped.ProtectionPolicies.Delete(params, nil)
	if err != nil {
		return err
	}
	return nil
}

// DeleteWithContext deletes a protectionpolicy with search parameters using provided context
func (r *ProtectionPolicy) DeleteWithContext(ctx context.Context, req *ProtectionPolicySearchParams) error {
	params, err := vast_client.NewParamsFromStruct(req)
	if err != nil {
		return err
	}
	_, err = r.Untyped.ProtectionPolicies.DeleteWithContext(ctx, params, nil, nil)
	if err != nil {
		return err
	}
	return nil
}

// DeleteById deletes a protectionpolicy by ID
func (r *ProtectionPolicy) DeleteById(id any) error {
	_, err := r.Untyped.ProtectionPolicies.DeleteById(id, nil, nil)
	if err != nil {
		return err
	}
	return nil
}

// DeleteByIdWithContext deletes a protectionpolicy by ID using provided context
func (r *ProtectionPolicy) DeleteByIdWithContext(ctx context.Context, id any) error {
	_, err := r.Untyped.ProtectionPolicies.DeleteByIdWithContext(ctx, id, nil, nil)
	if err != nil {
		return err
	}
	return nil
}

// Ensure ensures a protectionpolicy exists with typed response
func (r *ProtectionPolicy) Ensure(searchParams *ProtectionPolicySearchParams, body *ProtectionPolicyRequestBody) (*ProtectionPolicyModel, error) {
	searchParamsConverted, err := vast_client.NewParamsFromStruct(searchParams)
	if err != nil {
		return nil, err
	}
	bodyConverted, err := vast_client.NewParamsFromStruct(body)
	if err != nil {
		return nil, err
	}

	record, err := r.Untyped.ProtectionPolicies.Ensure(searchParamsConverted, bodyConverted)
	if err != nil {
		return nil, err
	}

	var response ProtectionPolicyModel
	if err := record.Fill(&response); err != nil {
		return nil, err
	}

	return &response, nil
}

// EnsureWithContext ensures a protectionpolicy exists with typed response using provided context
func (r *ProtectionPolicy) EnsureWithContext(ctx context.Context, searchParams *ProtectionPolicySearchParams, body *ProtectionPolicyRequestBody) (*ProtectionPolicyModel, error) {
	searchParamsConverted, err := vast_client.NewParamsFromStruct(searchParams)
	if err != nil {
		return nil, err
	}
	bodyConverted, err := vast_client.NewParamsFromStruct(body)
	if err != nil {
		return nil, err
	}

	record, err := r.Untyped.ProtectionPolicies.EnsureWithContext(ctx, searchParamsConverted, bodyConverted)
	if err != nil {
		return nil, err
	}

	var response ProtectionPolicyModel
	if err := record.Fill(&response); err != nil {
		return nil, err
	}

	return &response, nil
}

// EnsureByName ensures a protectionpolicy exists by name with typed response
func (r *ProtectionPolicy) EnsureByName(name string, body *ProtectionPolicyRequestBody) (*ProtectionPolicyModel, error) {
	bodyConverted, err := vast_client.NewParamsFromStruct(body)
	if err != nil {
		return nil, err
	}

	record, err := r.Untyped.ProtectionPolicies.EnsureByName(name, bodyConverted)
	if err != nil {
		return nil, err
	}

	var response ProtectionPolicyModel
	if err := record.Fill(&response); err != nil {
		return nil, err
	}

	return &response, nil
}

// EnsureByNameWithContext ensures a protectionpolicy exists by name with typed response using provided context
func (r *ProtectionPolicy) EnsureByNameWithContext(ctx context.Context, name string, body *ProtectionPolicyRequestBody) (*ProtectionPolicyModel, error) {
	bodyConverted, err := vast_client.NewParamsFromStruct(body)
	if err != nil {
		return nil, err
	}

	record, err := r.Untyped.ProtectionPolicies.EnsureByNameWithContext(ctx, name, bodyConverted)
	if err != nil {
		return nil, err
	}

	var response ProtectionPolicyModel
	if err := record.Fill(&response); err != nil {
		return nil, err
	}

	return &response, nil
}

// Exists checks if a protectionpolicy exists
func (r *ProtectionPolicy) Exists(req *ProtectionPolicySearchParams) (bool, error) {
	params, err := vast_client.NewParamsFromStruct(req)
	if err != nil {
		return false, err
	}
	return r.Untyped.ProtectionPolicies.Exists(params)
}

// ExistsWithContext checks if a protectionpolicy exists using provided context
func (r *ProtectionPolicy) ExistsWithContext(ctx context.Context, req *ProtectionPolicySearchParams) (bool, error) {
	params, err := vast_client.NewParamsFromStruct(req)
	if err != nil {
		return false, err
	}
	return r.Untyped.ProtectionPolicies.ExistsWithContext(ctx, params)
}

// MustExists checks if a protectionpolicy exists and panics if not
func (r *ProtectionPolicy) MustExists(req *ProtectionPolicySearchParams) bool {
	params, err := vast_client.NewParamsFromStruct(req)
	if err != nil {
		panic(err)
	}
	return r.Untyped.ProtectionPolicies.MustExists(params)
}

// MustExistsWithContext checks if a protectionpolicy exists and panics if not using provided context
func (r *ProtectionPolicy) MustExistsWithContext(ctx context.Context, req *ProtectionPolicySearchParams) bool {
	params, err := vast_client.NewParamsFromStruct(req)
	if err != nil {
		panic(err)
	}
	return r.Untyped.ProtectionPolicies.MustExistsWithContext(ctx, params)
}

// -----------------------------------------------------
// RENDERABLE INTERFACE METHODS
// -----------------------------------------------------

// PrettyTable returns a formatted table representation of the ProtectionPolicyModel
func (m *ProtectionPolicyModel) PrettyTable() string {
	return m.toRecord().PrettyTable()
}

// PrettyJson returns a JSON representation of the ProtectionPolicyModel
func (m *ProtectionPolicyModel) PrettyJson(indent ...string) string {
	return m.toRecord().PrettyJson(indent...)
}

// toRecord converts the ProtectionPolicyModel to a Record (map[string]any) with @resourceType
func (m *ProtectionPolicyModel) toRecord() vast_client.Record {
	// Convert struct to map using JSON marshaling
	jsonBytes, err := json.Marshal(m)
	if err != nil {
		return vast_client.Record{"error": fmt.Sprintf("failed to marshal struct: %v", err)}
	}

	var record vast_client.Record
	if err := json.Unmarshal(jsonBytes, &record); err != nil {
		return vast_client.Record{"error": fmt.Sprintf("failed to unmarshal to record: %v", err)}
	}

	// Add resource type using reflection
	record["@resourceType"] = reflect.TypeOf(*m).Name()

	return record
}
