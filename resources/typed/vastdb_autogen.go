// Code generated by generate-typed-resources. DO NOT EDIT.
// Template: EXTRA_METHODS_ONLY

package typed

import (
	"context"
	"fmt"
	"net/http"

	"github.com/vast-data/go-vast-client/core"
)

// VastDb provides typed access to VastDb extra methods
type VastDb struct {
	*core.TypedVastResource
}

// -----------------------------------------------------
// EXTRA METHODS
// -----------------------------------------------------

// VastDbVipsItem represents a nested type for VastDb extra method response
type VastDbVipsItem struct {
	Port int64  `json:"port,omitempty" yaml:"port,omitempty" required:"false" doc:"DB access port"`
	Vip  string `json:"vip,omitempty" yaml:"vip,omitempty" required:"false" doc:"DB access VIP"`
}

// VastDbVips_GET_Body represents the request body for VastDbVips
type VastDbVips_GET_Body struct {
	TenantId int64 `json:"tenant_id,omitempty" yaml:"tenant_id,omitempty" required:"false" doc:"Filter by tenant. Specify tenant ID."`
}

// VastDbVipsWithContext_GET
// method: GET
// url: /vastdb/vips/
// summary: Get a list of DB access VIPs
func (r *VastDb) VastDbVipsWithContext_GET(ctx context.Context, params *VastDbVips_GET_Body) ([]VastDbVipsItem, error) {
	resourcePath := "/vastdb/vips/"

	reqParams, err := core.NewParamsFromStruct(params)
	if err != nil {
		return nil, err
	}
	var reqBody core.Params

	record, err := core.Request[core.RecordSet](ctx, r.Untyped.GetResourceMap()[r.GetResourceType()], http.MethodGet, resourcePath, reqParams, reqBody)
	if err != nil {
		return nil, err
	}
	// Convert RecordSet ([]core.Record) to typed array ([]VastDbVipsItem)
	result := make([]VastDbVipsItem, len(record))
	for i, item := range record {
		if err := item.Fill(&result[i]); err != nil {
			return nil, fmt.Errorf("failed to unmarshal array item %d: %w", i, err)
		}
	}
	return result, nil

}

// VastDbVips_GET
// method: GET
// url: /vastdb/vips/
// summary: Get a list of DB access VIPs
func (r *VastDb) VastDbVips_GET(params *VastDbVips_GET_Body) ([]VastDbVipsItem, error) {
	return r.VastDbVipsWithContext_GET(r.Untyped.GetCtx(), params)
}
