// Code generated by generate-typed-resources. DO NOT EDIT.
// Template: DELETE

package typed

import (
	"context"

	"github.com/vast-data/go-vast-client/core"
)

// -----------------------------------------------------
// RESOURCE TYPE
// -----------------------------------------------------

// SubnetManager represents a typed resource for subnetmanager operations
type SubnetManager struct {
	*core.TypedVastResource
}

// -----------------------------------------------------
// SEARCH PARAMS
// -----------------------------------------------------

// SubnetManagerSearchParams represents the search parameters for SubnetManager operations
type SubnetManagerSearchParams struct {

	// RawData allows passing arbitrary search parameters as key-value pairs.
	//
	// Use this field when you need query parameters that are not covered by the typed fields above.
	// This is particularly useful for:
	//   - Dynamic filter operations (e.g., "path__contains", "name__icontains")
	//   - Django-style query filters
	//   - Custom backend-specific parameters
	//
	// Example:
	//   params := &SubnetManagerSearchParams{
	//       RawData: core.Params{"path__contains": "/foo", "name__icontains": "bar"},
	//   }
	//
	// Note: You can use either the typed fields or RawData, or combine both.
	RawData core.Params `json:"-" yaml:"-"`
}

// -----------------------------------------------------
// DELETE
// -----------------------------------------------------

// Delete deletes a subnetmanager with search parameters
func (r *SubnetManager) Delete(req *SubnetManagerSearchParams) error {
	return r.DeleteWithContext(r.Untyped.GetCtx(), req)
}

// DeleteWithContext deletes a subnetmanager with search parameters using provided context
func (r *SubnetManager) DeleteWithContext(ctx context.Context, req *SubnetManagerSearchParams) error {
	params, err := core.NewParamsFromStruct(req)
	if err != nil {
		return err
	}
	_, err = r.Untyped.GetResourceMap()[r.GetResourceType()].DeleteWithContext(ctx, params, nil, nil)
	if err != nil {
		return err
	}
	return nil
}

// DeleteById deletes a subnetmanager by ID
func (r *SubnetManager) DeleteById(id any) error {
	return r.DeleteByIdWithContext(r.Untyped.GetCtx(), id)
}

// DeleteByIdWithContext deletes a subnetmanager by ID using provided context
func (r *SubnetManager) DeleteByIdWithContext(ctx context.Context, id any) error {
	_, err := r.Untyped.GetResourceMap()[r.GetResourceType()].DeleteByIdWithContext(ctx, id, nil, nil)
	if err != nil {
		return err
	}
	return nil
}

// -----------------------------------------------------
// GENERATION ISSUES
// -----------------------------------------------------
//   - CREATE operation excluded: POST subnetmanagers has no response schema and doesn't return 204 NO CONTENT
//   - UPDATE operation excluded: PATCH/PUT /subnetmanagers/{id}/ has no response schema and doesn't return 204 NO CONTENT
