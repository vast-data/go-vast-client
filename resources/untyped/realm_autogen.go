// Code generated by generate-untyped-resources. DO NOT EDIT.

package untyped

import (
	"context"
	"net/http"

	"github.com/vast-data/go-vast-client/core"
)

// RealmAssignWithContext_PATCH
// method: PATCH
// url: /realms/{id}/assign/
// summary: Assign object type to realm
//
// Parameters:
//   - objectType (body): Object
func (r *Realm) RealmAssignWithContext_PATCH(ctx context.Context, id any, objectType string) (core.Record, error) {
	resourcePath := core.BuildResourcePathWithID("realms", id, "assign")
	body := core.Params{}
	if objectType != "" {
		body["object_type"] = objectType
	}
	result, err := core.Request[core.Record](ctx, r, http.MethodPatch, resourcePath, nil, body)
	if err != nil {
		return nil, err
	}
	return result, nil
}

// RealmAssign_PATCH
// method: PATCH
// url: /realms/{id}/assign/
// summary: Assign object type to realm
//
// Parameters:
//   - objectType (body): Object
func (r *Realm) RealmAssign_PATCH(id any, objectType string) (core.Record, error) {
	return r.RealmAssignWithContext_PATCH(r.Rest.GetCtx(), id, objectType)
}

// RealmUnassignWithContext_PATCH
// method: PATCH
// url: /realms/{id}/unassign/
// summary: Unassign object type from realm
//
// Parameters:
//   - objectType (body): Object
func (r *Realm) RealmUnassignWithContext_PATCH(ctx context.Context, id any, objectType string) (core.Record, error) {
	resourcePath := core.BuildResourcePathWithID("realms", id, "unassign")
	body := core.Params{}
	if objectType != "" {
		body["object_type"] = objectType
	}
	result, err := core.Request[core.Record](ctx, r, http.MethodPatch, resourcePath, nil, body)
	if err != nil {
		return nil, err
	}
	return result, nil
}

// RealmUnassign_PATCH
// method: PATCH
// url: /realms/{id}/unassign/
// summary: Unassign object type from realm
//
// Parameters:
//   - objectType (body): Object
func (r *Realm) RealmUnassign_PATCH(id any, objectType string) (core.Record, error) {
	return r.RealmUnassignWithContext_PATCH(r.Rest.GetCtx(), id, objectType)
}
