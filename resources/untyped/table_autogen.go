// Code generated by generate-untyped-resources. DO NOT EDIT.

package untyped

import (
	"context"
	"net/http"

	"github.com/vast-data/go-vast-client/core"
)

// TableAddColumnsWithContext_PATCH
// method: PATCH
// url: /tables/add_columns/
// summary: Add Columns to a Database Table
func (t *Table) TableAddColumnsWithContext_PATCH(ctx context.Context, body core.Params) error {
	resourcePath := "/tables/add_columns/"
	_, err := core.Request[core.Record](ctx, t, http.MethodPatch, resourcePath, nil, body)
	return err

}

// TableAddColumns_PATCH
// method: PATCH
// url: /tables/add_columns/
// summary: Add Columns to a Database Table
func (t *Table) TableAddColumns_PATCH(body core.Params) error {
	return t.TableAddColumnsWithContext_PATCH(t.Rest.GetCtx(), body)
}

// TableDeleteWithContext_DELETE
// method: DELETE
// url: /tables/delete/
// summary: Delete a Database Table
func (t *Table) TableDeleteWithContext_DELETE(ctx context.Context, params core.Params) error {
	resourcePath := "/tables/delete/"
	_, err := core.Request[core.Record](ctx, t, http.MethodDelete, resourcePath, params, nil)
	return err

}

// TableDelete_DELETE
// method: DELETE
// url: /tables/delete/
// summary: Delete a Database Table
func (t *Table) TableDelete_DELETE(params core.Params) error {
	return t.TableDeleteWithContext_DELETE(t.Rest.GetCtx(), params)
}

// TableRenameWithContext_PATCH
// method: PATCH
// url: /tables/rename/
// summary: Rename a Database Table
func (t *Table) TableRenameWithContext_PATCH(ctx context.Context, body core.Params) error {
	resourcePath := "/tables/rename/"
	_, err := core.Request[core.Record](ctx, t, http.MethodPatch, resourcePath, nil, body)
	return err

}

// TableRename_PATCH
// method: PATCH
// url: /tables/rename/
// summary: Rename a Database Table
func (t *Table) TableRename_PATCH(body core.Params) error {
	return t.TableRenameWithContext_PATCH(t.Rest.GetCtx(), body)
}

// TableShowWithContext_GET
// method: GET
// url: /tables/show/
// summary: Show a Database Table
func (t *Table) TableShowWithContext_GET(ctx context.Context, params core.Params) (core.Record, error) {
	resourcePath := "/tables/show/"
	result, err := core.Request[core.Record](ctx, t, http.MethodGet, resourcePath, params, nil)
	if err != nil {
		return nil, err
	}
	return result, nil
}

// TableShow_GET
// method: GET
// url: /tables/show/
// summary: Show a Database Table
func (t *Table) TableShow_GET(params core.Params) (core.Record, error) {
	return t.TableShowWithContext_GET(t.Rest.GetCtx(), params)
}
