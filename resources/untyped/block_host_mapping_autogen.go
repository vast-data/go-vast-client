// Code generated by generate-untyped-resources. DO NOT EDIT.

package untyped

import (
	"context"
	"net/http"
	"time"

	"github.com/vast-data/go-vast-client/core"
)

// BlockHostMappingBulkWithContext_PATCH
// method: PATCH
// url: /blockmappings/bulk/
// summary: Map Block Hosts to Volumes
//
// Parameters:
//   - waitTimeout: If 0, returns immediately without waiting (async). Otherwise, waits for task completion with the specified timeout.
func (b *BlockHostMapping) BlockHostMappingBulkWithContext_PATCH(ctx context.Context, body core.Params, waitTimeout time.Duration) (*AsyncResult, error) {
	resourcePath := "/blockmappings/bulk/"
	result, err := core.Request[core.Record](ctx, b, http.MethodPatch, resourcePath, nil, body)
	if err != nil {
		return nil, err
	}
	if result.Empty() {
		return nil, nil
	}
	// Create async task from result
	task := asyncResultFromRecord(ctx, result, b.Rest)
	// If waitTimeout is 0, return task immediately without waiting (async background operation)
	if waitTimeout == 0 {
		return task, nil
	}
	// Wait for task completion with the specified timeout
	if _, err := task.Wait(waitTimeout); err != nil {
		return task, err
	}
	return task, nil

}

// BlockHostMappingBulk_PATCH
// method: PATCH
// url: /blockmappings/bulk/
// summary: Map Block Hosts to Volumes
//
// Parameters:
//   - waitTimeout: If 0, returns immediately without waiting (async). Otherwise, waits for task completion with the specified timeout.
func (b *BlockHostMapping) BlockHostMappingBulk_PATCH(body core.Params, waitTimeout time.Duration) (*AsyncResult, error) {
	return b.BlockHostMappingBulkWithContext_PATCH(b.Rest.GetCtx(), body, waitTimeout)
}
