// Code generated by generate-untyped-resources. DO NOT EDIT.

package untyped

import (
	"context"
	"net/http"
	"time"

	"github.com/vast-data/go-vast-client/core"
)

// HostDiscoverWithContext_GET
// method: GET
// url: /hosts/discover/
// summary: Discover Hosts
//
// Parameters:
//   - waitTimeout: If 0, returns immediately without waiting (async). Otherwise, waits for task completion with the specified timeout.
func (h *Host) HostDiscoverWithContext_GET(ctx context.Context, params core.Params, waitTimeout time.Duration) (*AsyncResult, error) {
	resourcePath := "/hosts/discover/"
	result, err := core.Request[core.Record](ctx, h, http.MethodGet, resourcePath, params, nil)
	if err != nil {
		return nil, err
	}

	asyncResult, _, err := MaybeWaitAsyncResultWithContext(ctx, result, h.Rest, waitTimeout)
	return asyncResult, err

}

// HostDiscover_GET
// method: GET
// url: /hosts/discover/
// summary: Discover Hosts
//
// Parameters:
//   - waitTimeout: If 0, returns immediately without waiting (async). Otherwise, waits for task completion with the specified timeout.
func (h *Host) HostDiscover_GET(params core.Params, waitTimeout time.Duration) (*AsyncResult, error) {
	return h.HostDiscoverWithContext_GET(h.Rest.GetCtx(), params, waitTimeout)
}

// HostDiscoveredHostsWithContext_GET
// method: GET
// url: /hosts/discovered_hosts/
// summary: Return new discovered hosts
func (h *Host) HostDiscoveredHostsWithContext_GET(ctx context.Context, params core.Params) (core.RecordSet, error) {
	resourcePath := "/hosts/discovered_hosts/"
	result, err := core.Request[core.RecordSet](ctx, h, http.MethodGet, resourcePath, params, nil)
	if err != nil {
		return nil, err
	}
	return result, nil

}

// HostDiscoveredHosts_GET
// method: GET
// url: /hosts/discovered_hosts/
// summary: Return new discovered hosts
func (h *Host) HostDiscoveredHosts_GET(params core.Params) (core.RecordSet, error) {
	return h.HostDiscoveredHostsWithContext_GET(h.Rest.GetCtx(), params)
}
