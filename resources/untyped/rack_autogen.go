// Code generated by generate-untyped-resources. DO NOT EDIT.

package untyped

import (
	"context"
	"net/http"

	"github.com/vast-data/go-vast-client/core"
)

// RackAddBoxesWithContext_POST
// method: POST
// url: /racks/{id}/add_boxes/
// summary: Add Boxes to a Rack
func (r *Rack) RackAddBoxesWithContext_POST(ctx context.Context, id any, body core.Params) error {
	resourcePath := core.BuildResourcePathWithID("racks", id, "add_boxes")
	_, err := core.Request[core.Record](ctx, r, http.MethodPost, resourcePath, nil, body)
	return err

}

// RackAddBoxes_POST
// method: POST
// url: /racks/{id}/add_boxes/
// summary: Add Boxes to a Rack
func (r *Rack) RackAddBoxes_POST(id any, body core.Params) error {
	return r.RackAddBoxesWithContext_POST(r.Rest.GetCtx(), id, body)
}

// RackBgpconfigWithContext_POST
// method: POST
// url: /racks/{id}/bgpconfig/
// summary: Configure BGP on Rack
func (r *Rack) RackBgpconfigWithContext_POST(ctx context.Context, id any, body core.Params) error {
	resourcePath := core.BuildResourcePathWithID("racks", id, "bgpconfig")
	_, err := core.Request[core.Record](ctx, r, http.MethodPost, resourcePath, nil, body)
	return err

}

// RackBgpconfig_POST
// method: POST
// url: /racks/{id}/bgpconfig/
// summary: Configure BGP on Rack
func (r *Rack) RackBgpconfig_POST(id any, body core.Params) error {
	return r.RackBgpconfigWithContext_POST(r.Rest.GetCtx(), id, body)
}

// RackControlLedWithContext_PATCH
// method: PATCH
// url: /racks/{id}/control_led/
// summary: Control Rack Boxes LED
//
// Parameters:
//   - control (body): LED state
func (r *Rack) RackControlLedWithContext_PATCH(ctx context.Context, id any, control string) error {
	resourcePath := core.BuildResourcePathWithID("racks", id, "control_led")
	body := core.Params{}
	if control != "" {
		body["control"] = control
	}
	_, err := core.Request[core.Record](ctx, r, http.MethodPatch, resourcePath, nil, body)
	return err

}

// RackControlLed_PATCH
// method: PATCH
// url: /racks/{id}/control_led/
// summary: Control Rack Boxes LED
//
// Parameters:
//   - control (body): LED state
func (r *Rack) RackControlLed_PATCH(id any, control string) error {
	return r.RackControlLedWithContext_PATCH(r.Rest.GetCtx(), id, control)
}

// RackRenameWithContext_PATCH
// method: PATCH
// url: /racks/{id}/rename/
// summary: Rename Rack
//
// Parameters:
//   - name (body): New Rack name
func (r *Rack) RackRenameWithContext_PATCH(ctx context.Context, id any, name string) error {
	resourcePath := core.BuildResourcePathWithID("racks", id, "rename")
	body := core.Params{}
	if name != "" {
		body["name"] = name
	}
	_, err := core.Request[core.Record](ctx, r, http.MethodPatch, resourcePath, nil, body)
	return err

}

// RackRename_PATCH
// method: PATCH
// url: /racks/{id}/rename/
// summary: Rename Rack
//
// Parameters:
//   - name (body): New Rack name
func (r *Rack) RackRename_PATCH(id any, name string) error {
	return r.RackRenameWithContext_PATCH(r.Rest.GetCtx(), id, name)
}
